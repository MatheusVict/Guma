@use "../../variables/base" as base;
@use "../../variables/typography" as typography;
@use "../../variables/breakpoints" as breakpoints;
@use "../../mixins/flex" as flex;
@use "../../variables/colors" as colors;

.modal-overlay {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: rgba(0, 0, 0, 0.7);
  @include flex.flex-center();
  z-index: 1000;
  padding: base.$padding-md;
}

.modal-content {
  background-color: colors.color("neutral", "gray-mauve");
  border-radius: base.$border-radius-lg;
  max-width: 600px;
  width: 100%;
  max-height: 90vh;
  overflow-y: auto;
  box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);
}

.modal-header {
  @include flex.flex-row(space-between, center);
  padding: base.$padding-lg;
  border-bottom: 1px solid colors.color('neutral', 'gray-lighter');

  h2 {
    font-family: typography.$font-secondary;
    font-size: 1.5rem;
    font-weight: 700;
    color: colors.color('neutral', 'gray-darkest');
    margin: 0;
  }

  .close-button {
    background: none;
    border: none;
    cursor: pointer;
    padding: base.$padding-sm;
    border-radius: base.$border-radius-base;
    color: colors.color('neutral', 'gray-dark');
    transition: all 0.2s ease;

    &:hover {
      background-color: colors.color('neutral', 'gray-lightest');
      color: colors.color('neutral', 'gray-darkest');
    }
  }
}

.modal-body {
  padding: base.$padding-lg;
}

.instruction-section {
  margin-bottom: base.$margin-xl;

  h3 {
    font-family: typography.$font-secondary;
    font-size: 1.25rem;
    font-weight: 600;
    color: colors.color('neutral', 'gray-darkest');
    margin-bottom: base.$margin-md;
  }

  .instruction-list {
    list-style: none;
    counter-reset: step-counter;
    padding-left: 0;
    margin-bottom: base.$margin-lg;

    li {
      counter-increment: step-counter;
      margin-bottom: base.$margin-sm;
      padding-left: base.$padding-xl;
      position: relative;
      line-height: 1.5;
      color: colors.color('neutral', 'gray-dark');

      &::before {
        content: counter(step-counter);
        position: absolute;
        left: 0;
        top: 0;
        background: colors.color('orange', 'primary');
        color: white;
        width: 24px;
        height: 24px;
        border-radius: 50%;
        @include flex.flex-center();
        font-size: 0.875rem;
        font-weight: 600;
      }

      strong {
        color: colors.color('neutral', 'gray-darkest');
      }
    }
  }

  .warning-box {
    @include flex.flex-row(flex-start, flex-start, nowrap, base.$size-sm);
    background: colors.color('yellow', 'light-1');
    border: 1px solid colors.color('yellow', 'primary');
    border-radius: base.$border-radius-base;
    padding: base.$padding-md;

    svg {
      color: colors.color('yellow', 'dark-2');
      flex-shrink: 0;
      margin-top: 2px;
    }

    p {
      margin: 0;
      color: colors.color('yellow', 'dark-2');
      font-size: 0.875rem;
      line-height: 1.4;

      strong {
        font-weight: 600;
      }
    }
  }
}

.input-section {
  color: colors.color('dark', 'primary');
  .input-label {
    display: block;
    font-weight: 600;
    color: colors.color('neutral', 'gray-darkest');
    margin-bottom: base.$margin-sm;
    font-size: 0.875rem;
  }

  .token-input {
    width: 100%;
    padding: base.$padding-md;
    border: 2px solid colors.color('neutral', 'gray-lighter');
    border-radius: base.$border-radius-base;
    font-size: 1rem;
    transition: border-color 0.2s ease;
    background: white;

    &:focus {
      outline: none;
      border-color: colors.color('orange', 'primary');
    }

    &.error {
      border-color: colors.color('red', 'primary');
    }

    &::placeholder {
      color: colors.color('neutral', 'gray-medium');
    }
  }

  .error-message {
    color: colors.color('red', 'primary');
    font-size: 0.875rem;
    margin-top: base.$margin-xs;
  }
}

.modal-footer {
  @include flex.flex-row(flex-end, center, nowrap, base.$size-md);
  padding: base.$padding-lg;
  border-top: 1px solid colors.color('neutral', 'gray-lighter');

  .cancel-button {
    background: none;
    border: 2px solid colors.color('neutral', 'gray-lighter');
    color: colors.color('neutral', 'gray-dark');
    padding: base.$padding-sm base.$padding-lg;
    border-radius: base.$border-radius-base;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.2s ease;

    &:hover {
      border-color: colors.color('neutral', 'gray-dark');
      color: colors.color('neutral', 'gray-darkest');
    }
  }
}

// Responsive design
@media (max-width: 640px) {
  .modal-overlay {
    padding: base.$padding-sm;
  }

  .modal-content {
    max-height: 95vh;
  }

  .modal-header,
  .modal-body,
  .modal-footer {
    padding: base.$padding-md;
  }

  .instruction-section {
    .instruction-list li {
      padding-left: base.$padding-lg;

      &::before {
        width: 20px;
        height: 20px;
        font-size: 0.75rem;
      }
    }
  }

  .modal-footer {
    @include flex.flex-column(stretch, stretch, nowrap, base.$size-sm);

    .cancel-button {
      order: 2;
    }

    :deep(.button-primary) {
      order: 1;
    }
  }
}